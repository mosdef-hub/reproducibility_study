<ForceField version="0.0.1" name="SPC/E Water" combining_rule="geometric">
 <AtomTypes>
   <Type name="opls-116" class="OW" element="O" mass="15.99940" def="[O;X2](H)(H)" desc="SPC/E Oxygen" doi="10.1021/j100308a038"/>
   <Type name="opls-117" class="HW" element="H" mass="1.00800" def="[H;X1][O;X2](H)" desc="SPC/E Hydrogen" doi="10.1021/j100308a038"/>
 </AtomTypes>
 <HarmonicBondForce>
   <!-- https://github.com/gromacs/gromacs/blob/master/share/top/oplsaa.ff/spce.itp -->
   <Bond class1="OW" class2="HW" length="0.100" k="345000.0"/>
 </HarmonicBondForce>
 <HarmonicAngleForce>
   <!-- https://github.com/gromacs/gromacs/blob/master/share/top/oplsaa.ff/spce.itp -->
   <!-- numpy.deg2rad(109.47).round(8) -->
   <!-- numpy.__version__ 1.21.1 -->
   <Angle class1="HW" class2="OW" class3="HW" angle="1.91061193" k="383.0"/>
 </HarmonicAngleForce>
 <NonbondedForce coulomb14scale="0.5" lj14scale="0.5">
   <!-- https://doi.org/10.1021/j100308a038 -->
   <!-- Calculating sigma and epsilon from original SPCE paper with python
    #U = -(A/r)^6+(B/r)^12
    #that makes
    #sigma = B^2/A and epsilon = (1/4)*(A/B)^12

    from decimal import *
    A = Decimal(0.37122)# ((kJ/mol)^1/6)nm
    B = Decimal(0.3428) #(kJ/mol)^1/12nm
    kB = Decimal(1.380649 *1e-23)# J/K
    NA = Decimal(6.02214076*1e23) #1/mol

    sigma = B**2/A #nm
    epsilon_kJmol = Decimal(0.25)*(A/B)**12 #kJ/mol

    epsilon_kcalmol = epsilon_kJmol/Decimal(4.184)

    epsilon_K = Decimal(1000)*epsilon_kJmol/(NA*kB)


    print("sigma is {} nm".format(sigma))
    print("epsilon is {} kJ/mol = {} kcal/mol = {} K".format(epsilon_kJmol, epsilon_kcalmol, epsilon_K))
    -->
  <Atom type="opls-116" charge="-0.8476" sigma="0.3165557890199881401361442585" epsilon="0.6501695808187480926657690985"/>
  <Atom type="opls-117" charge="0.4238" sigma="0.0" epsilon="0.0"/>
 </NonbondedForce>
</ForceField>
